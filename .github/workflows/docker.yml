name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18' # Change if needed

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test # Optional: remove if not needed

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/node-k8s-app:${{ github.sha }} .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/node-k8s-app:${{ github.sha }}

  deploy:
    name: Deploy to Minikube on EC2
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: SSH into EC2 and deploy
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          APP_DIR=~/node-k8s-app

          # Clone repo if not present
          if [ ! -d "$APP_DIR" ]; then
            git clone https://github.com/${{ github.repository }} $APP_DIR
          fi

          cd $APP_DIR

          # Update image tag in deployment.yml
          sed -i "s|image:.*|image: ${{ secrets.DOCKER_USERNAME }}/node-k8s-app:${{ github.sha }}|" deployment.yml

          # Apply Kubernetes manifests
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml

          # Verify deployment
          kubectl get pods
          kubectl get svc
